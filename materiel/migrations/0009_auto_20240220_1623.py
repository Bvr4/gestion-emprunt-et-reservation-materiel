# Generated by Django 4.2.7 on 2024-02-20 15:23

from django.db import migrations

def creer_groupes(apps, schema_migration):
    Utilisateur = apps.get_model('materiel', 'Utilisateur')
    Emplacement = apps.get_model('materiel', 'Emplacement')
    Categorie = apps.get_model('materiel', 'Categorie')
    Materiel = apps.get_model('materiel', 'Materiel')
    Emprunt = apps.get_model('materiel', 'Emprunt')
    Commentaire = apps.get_model('materiel', 'Commentaire')
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    utilisateur_content_type = ContentType.objects.get_for_model(Utilisateur)
    emplacement_content_type = ContentType.objects.get_for_model(Emplacement)
    categorie_content_type = ContentType.objects.get_for_model(Categorie)
    materiel_content_type = ContentType.objects.get_for_model(Materiel)
    emprunt_content_type = ContentType.objects.get_for_model(Emprunt)
    commentaire_content_type = ContentType.objects.get_for_model(Commentaire)

    add_utilisateur, created = Permission.objects.get_or_create(
        codename='add_utilisateur',
        content_type=utilisateur_content_type,
    )
    change_utilisateur, created = Permission.objects.get_or_create(
        codename='change_utilisateur',
        content_type=utilisateur_content_type,
    )
    delete_utilisateur, created = Permission.objects.get_or_create(
        codename='delete_utilisateur',
        content_type=utilisateur_content_type,
    )
    view_utilisateur, created = Permission.objects.get_or_create(
        codename='view_utilisateur',
        content_type=utilisateur_content_type,
    )

    add_emplacement, created = Permission.objects.get_or_create(
        codename='add_emplacement', 
        content_type=emplacement_content_type,
    )
    change_emplacement, created = Permission.objects.get_or_create(
        codename='change_emplacement', 
        content_type=emplacement_content_type,
    )
    delete_emplacement, created = Permission.objects.get_or_create(
        codename='delete_emplacement', 
        content_type=emplacement_content_type,
    )
    view_emplacement, created = Permission.objects.get_or_create(
        codename='view_emplacement', 
        content_type=emplacement_content_type,
    )

    add_categorie, created = Permission.objects.get_or_create(
        codename='add_categorie',
        content_type=categorie_content_type,
    )
    change_categorie, created = Permission.objects.get_or_create(
        codename='change_categorie',
        content_type=categorie_content_type,
    )
    delete_categorie, created = Permission.objects.get_or_create(
        codename='delete_categorie',
        content_type=categorie_content_type,
    )
    view_categorie, created = Permission.objects.get_or_create(
        codename='view_categorie',
        content_type=categorie_content_type,
    )
    
    
    add_materiel, created = Permission.objects.get_or_create(
        codename='add_materiel',
        content_type=materiel_content_type,
    )
    change_materiel, created = Permission.objects.get_or_create(
        codename='change_materiel',
        content_type=materiel_content_type,
    )
    delete_materiel, created = Permission.objects.get_or_create(
        codename='delete_materiel',
        content_type=materiel_content_type,
    )
    view_materiel, created = Permission.objects.get_or_create(
        codename='view_materiel',
        content_type=materiel_content_type,
    )

    add_emprunt, created = Permission.objects.get_or_create(
        codename='add_emprunt',
        content_type=emprunt_content_type,
    )
    change_emprunt, created = Permission.objects.get_or_create(
        codename='change_emprunt',
        content_type=emprunt_content_type,
    )
    delete_emprunt, created = Permission.objects.get_or_create(
        codename='delete_emprunt',
        content_type=emprunt_content_type,
    )
    view_emprunt, created = Permission.objects.get_or_create(
        codename='view_emprunt',
        content_type=emprunt_content_type,
    )

    add_commentaire, created = Permission.objects.get_or_create(
        codename='add_commentaire',
        content_type=commentaire_content_type
    )
    change_commentaire, created = Permission.objects.get_or_create(
        codename='change_commentaire',
        content_type=commentaire_content_type
    )
    delete_commentaire, created = Permission.objects.get_or_create(
        codename='delete_commentaire',
        content_type=commentaire_content_type
    )
    view_commentaire, created = Permission.objects.get_or_create(
        codename='view_commentaire',
        content_type=commentaire_content_type
    )
    
    usager_permissions = [
        view_emplacement,
        view_categorie,
        view_materiel,
        change_utilisateur,
        view_utilisateur,
        change_emprunt,
        view_emprunt,
        add_commentaire,
        change_commentaire,
        delete_commentaire,
        view_commentaire,
    ]

    emprunteur_permissions = [
        add_emprunt,
    ]

    moderateur_permissions = [
        add_emplacement,
        change_emplacement,
        delete_emplacement,
        add_categorie,
        change_categorie,
        delete_categorie,
        add_materiel,
        change_materiel,
        delete_materiel,
        add_utilisateur,
        delete_utilisateur,
        delete_emprunt,
    ]
    
    usagers = Group(name='usagers')
    usagers.save()    
    usagers.permissions.set(usager_permissions)

    emprunteurs = Group(name='emprunteurs')
    emprunteurs.save()    
    emprunteurs.permissions.set(emprunteur_permissions)

    moderateurs = Group(name='moderateurs')
    moderateurs.save()    
    moderateurs.permissions.set(moderateur_permissions)

    # Ã  modifier ouais ouais
    for utilisateur in Utilisateur.objects.all():
        usagers.user_set.add(utilisateur.user)

        if utilisateur.peut_emprunter:
            emprunteurs.user_set.add(utilisateur.user)

        if utilisateur.est_moderateur:
            moderateurs.user_set.add(utilisateur.user)


class Migration(migrations.Migration):

    dependencies = [
        ('materiel', '0008_alter_commentaire_auteur'),
    ]

    operations = [
        migrations.RunPython(creer_groupes)
    ]
